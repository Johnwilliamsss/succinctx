name: plonky2x

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - '**'
    paths:
      - 'plonky2x/**'
  workflow_dispatch:
    branches:
      - '**'

jobs:
  test:
    name: CI Test Suite
    runs-on: ubuntu-latest
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.rustup/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-02-22
          override: true

      - name: Run cargo test
        run: cargo test --release --features "ci"
        env:
          RUST_LOG: 1
          RUST_BACKTRACE: 1

  lints:
    name: Formatting & Clippy
    runs-on: ubuntu-latest
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.rustup/
          key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-clippy-

      - name: Install nightly toolchain with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-02-22
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
        env:
          CARGO_INCREMENTAL: 1

      - name: Run cargo clippy
        run: cargo clippy --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
